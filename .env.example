# Your chain must be listed in https://github.com/ethereum-lists/chains
# And you must use the exact same name in this field:
SCR_CHAIN_NAME= # e.g. awesomechain

# The superchain that this chain will belong to (mainnet or sepolia)
SCR_SUPERCHAIN_TARGET= # e.g. mainnet

# The short name will be used to identify the chain within the registry.
# Ideally it does not contain spaces.
# Not that this is _NOT_ the short name from https://github.com/ethereum-lists/chains.
# It does not need to be globally unique, only unique within the particular superchain.
# In this repository, the chain is identified by {SCR_SUPERCHAIN_TARGET}/{SCR_CHAIN_SHORT_NAME}
# For example, mainnet/op and sepolia/op have the same chain short name.
SCR_CHAIN_SHORT_NAME= # e.g. awsm

# Whether the chain is on track to become a standard chain
SCR_STANDARD_CHAIN_CANDIDATE=false # set to true to run most of the validation checks for standard chains

# This is the path to your local fork of the github.com/ethereum-optimism/optimism monorepo
# It is defined for convenience and reuse by other vars below
SCR_MONOREPO_DIR= # e.g. ../optimism

# The following vars point to three input files required for adding a chain
# Data will be scraped from these files in order to construct the required registry data
SCR_DEPLOYMENTS_DIR= # e.g. ${SCR_MONOREPO_DIR}/packages/contracts-bedrock/deployments/getting-started
SCR_ROLLUP_CONFIG= # e.g. ${SCR_MONOREPO_DIR}/op-node/rollup.json
SCR_GENESIS= # e.g. ${SCR_MONOREPO_DIR}/op-node/genesis.json

# Your chain's endpoint for ETHEREUM JSON-RPC requests
SCR_PUBLIC_RPC= # e.g. "http://awe.some.rpc"

# Your chain's sequencer endpoint for eth_sendRawTransaction.
# This can be set the same as SCR_PUBLIC_RPC if you don't have a separate endpoint.
SCR_SEQUENCER_RPC= # e.g. "http://awe.some.seq.rpc"

# Your chain's block explorer (e.g. Blockscout, Etherscan)
SCR_EXPLORER= # e.g. "https://awesomescan.org"
